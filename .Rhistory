theme_bw()
recall_RS_Plot
ggsave("02_Plots/Recall_RS_Groups.png", recall_RS_Plot, width = 8, height = 5.1)
# Je kleiner die BÃ¤ume sind desto geringer wird der Anteil der identischischen/richtigen Kanten (Xenologe)
# je weniger kannten desto mehr fallen die Fehlenden kanten ins Gewicht
###############################
#### RS plot accuracy  ####
acc_RS_Plot <- ggplot(PsumRSaccuracyDf, aes(x = as.numeric(Measure),
y = value,
group = as.factor(Group))) +
labs(title = 'RS Fitch: Mean Accuracy of Groups',
x ='Percentage of Original Graph',
y = 'Accuracy',
colour = 'Group') +
geom_line(aes(color = factor(Group))) +
geom_point(aes(color = factor(Group))) +
theme_bw()
acc_RS_Plot
ggsave("02_Plots/Accuracy_RS_Groups.png", acc_RS_Plot, width = 8, height = 5.1)
# Jeh mehr Knoten, desto mehr 'Fehler' werden gemacht.
# Wie
###############################
#### RS plot  Preciscion  ####
prec_RS_Plot <- ggplot(PsumRSprecisionlDf, aes(x = as.numeric(Measure),
y = value,
group = as.factor(Group))) +
labs(title = 'RS Fitch: Mean Precision of Groups',
x ='Percentage of Original Graph',
y = 'Precision',
colour = 'Group') +
geom_line(aes(color = factor(Group))) +
geom_point(aes(color = factor(Group))) +
theme_bw()
prec_RS_Plot
ggsave("02_Plots/Prec_RS_Groups.png", acc_RS_Plot, width = 8, height = 5.1)
#### Tripple ####
names(treeDataDf)
#### True Negatives ####
treeDataDf$T_LDT_True_Neg <- (treeDataDf$Number_of_Nodes_ldt_100 * (treeDataDf$Number_of_Nodes_ldt_100-1) / 2)  - (treeDataDf$T_ldt_true_positive + treeDataDf$T_ldt_false_negative + treeDataDf$T_ldt_false_positive)
treeDataDf$S_LDT_True_Neg <- (treeDataDf$Number_of_Nodes_ldt_100 * (treeDataDf$Number_of_Nodes_ldt_100-1) / 2)  - (treeDataDf$S_ldt_true_positive + treeDataDf$T_ldt_false_negative + treeDataDf$S_ldt_false_positive)
# recall
treeDataDf$T_LDT_recall <- treeDataDf$T_ldt_true_positive / (treeDataDf$T_ldt_true_positive + treeDataDf$T_ldt_false_negative)
treeDataDf$S_LDT_recall <- treeDataDf$S_ldt_true_positive / (treeDataDf$S_ldt_true_positive + treeDataDf$S_ldt_false_negative)
# precision
treeDataDf$T_LDT_precision <- treeDataDf$T_ldt_true_positive/(treeDataDf$T_ldt_true_positive + treeDataDf$T_ldt_false_positive)
treeDataDf$S_LDT_precision <- treeDataDf$S_ldt_true_positive/(treeDataDf$S_ldt_true_positive + treeDataDf$S_ldt_false_positive)
# accuracy
treeDataDf$T_LDT_accuracy <- (treeDataDf$T_ldt_true_positive + treeDataDf$T_LDT_True_Neg) / (treeDataDf$T_ldt_true_positive + treeDataDf$T_LDT_True_Neg + treeDataDf$T_ldt_false_positive + treeDataDf$T_ldt_false_negative)
treeDataDf$S_LDT_accuracy <- (treeDataDf$S_ldt_true_positive + treeDataDf$S_LDT_True_Neg) / (treeDataDf$S_ldt_true_positive + treeDataDf$S_LDT_True_Neg + treeDataDf$S_ldt_false_positive + treeDataDf$S_ldt_false_negative)
#### Tripple T Plots ####
#### recall ####
gruppen <- levels(treeDataDf$Group)
sumTripple <- data.frame(Group = character(length(gruppen)))
for (i in 1:length(gruppen)) {
sumTripple$Group[i] <- gruppen[i]
sumTripple$T_LDT_Recall_Mean[i] <- round(mean(treeDataDf$T_LDT_recall[which(treeDataDf$Group == gruppen[i])], na.rm = T), digits = 4)
sumTripple$T_LDT_Recall_Median[i] <- round(median(treeDataDf$T_LDT_recall[which(treeDataDf$Group == gruppen[i])], na.rm = T), digits = 4)
sumTripple$S_LDT_Recall_Mean[i] <- round(mean(treeDataDf$S_LDT_recall[which(treeDataDf$Group == gruppen[i])], na.rm = T), digits = 4)
sumTripple$S_LDT_Recall_Median[i] <- round(median(treeDataDf$S_LDT_recall[which(treeDataDf$Group == gruppen[i])], na.rm = T), digits = 4)
}
recall_T_LDT <- ggplot(treeDataDf, aes(x = as.factor(Group),
y = T_LDT_recall,
group = as.factor(Group))) +
labs(title = 'Triple T: Mean Recall of Groups',
x ='Group',
y = 'Recall',
colour = 'Group') +
geom_boxplot(aes(color = factor(Group)), outlier.shape = NA, show.legend = FALSE) +
ylim(0,0.25) +
stat_summary(fun.y=mean, geom="point", shape=23, size=3) +
theme_bw()
recall_T_LDT
ggsave("02_Plots/Tripple_T_Recall_Groups.png", recall_T_LDT, width = 8, height = 5.1)
#### precision ###
sumPrecision <- data.frame(Group = character(length(gruppen)))
for (i in 1:length(gruppen)) {
sumPrecision$Group[i] <- gruppen[i]
sumPrecision$T_LDT_Precision_Mean[i] <- round(mean(treeDataDf$T_LDT_precision[which(treeDataDf$Group == gruppen[i])], na.rm = T), digits = 4)
sumPrecision$T_LDT_Precision_Median[i] <- round(median(treeDataDf$T_LDT_precision[which(treeDataDf$Group == gruppen[i])], na.rm = T), digits = 4)
sumPrecision$S_LDT_Precision_Mean[i] <- round(mean(treeDataDf$S_LDT_precision[which(treeDataDf$Group == gruppen[i])], na.rm = T), digits = 4)
sumPrecision$S_LDT_Precision_Median[i] <- round(median(treeDataDf$S_LDT_precision[which(treeDataDf$Group == gruppen[i])], na.rm = T), digits = 4)
}
precision_T_LDT <- ggplot(treeDataDf, aes(x = as.factor(Group),
y = T_LDT_precision,
group = as.factor(Group))) +
labs(title = 'Triple Gene Tree: Mean Precision of Groups',
x ='Group',
y = 'Precision',
colour = 'Group') +
geom_boxplot(aes(color = factor(Group)), outlier.shape = NA, show.legend = FALSE) +
#ylim(0,0.25) +
stat_summary(fun.y=mean, geom="point", shape=23, size=3) +
theme_bw()
precision_T_LDT
ggsave("02_Plots/Tripple_T_Precision_Groups.png", precision_T_LDT, width = 8, height = 5.1)
#### accuracy ###
sumAccuracy <- data.frame(Group = character(length(gruppen)))
for (i in 1:length(gruppen)) {
sumAccuracy$Group[i] <- gruppen[i]
sumAccuracy$T_LDT_Accuracy_Mean[i] <- round(mean(treeDataDf$T_LDT_accuracy[which(treeDataDf$Group == gruppen[i])], na.rm = T), digits = 4)
sumAccuracy$T_LDT_Accuracy_Median[i] <- round(median(treeDataDf$T_LDT_accuracy[which(treeDataDf$Group == gruppen[i])], na.rm = T), digits = 4)
sumAccuracy$S_LDT_Accuracy_Mean[i] <- round(mean(treeDataDf$S_LDT_accuracy[which(treeDataDf$Group == gruppen[i])], na.rm = T), digits = 4)
sumAccuracy$S_LDT_Accuracy_Median[i] <- round(median(treeDataDf$S_LDT_accuracy[which(treeDataDf$Group == gruppen[i])], na.rm = T), digits = 4)
}
accuracy_T_LDT <- ggplot(treeDataDf, aes(x = as.factor(Group),
y = T_LDT_accuracy,
group = as.factor(Group))) +
labs(title = 'Triple T: Mean Precision of Groups',
x ='Group',
y = 'Accuracy',
colour = 'Group') +
geom_boxplot(aes(color = factor(Group)), outlier.shape = NA, show.legend = FALSE) +
ylim(0,0.002) +
stat_summary(fun.y=mean, geom="point", shape=23, size=3) +
theme_bw()
accuracy_T_LDT
ggsave("02_Plots/Tripple_T_Accuracy_Groups.png", accuracy_T_LDT, width = 8, height = 5.1)
#### Tripple S Plots ####
#### recall ####
recall_S_LDT <- ggplot(treeDataDf, aes(x = as.factor(Group),
y = S_LDT_recall,
group = as.factor(Group))) +
labs(title = 'Triple S: Mean Recall of Groups',
x ='Group',
y = 'Recall',
colour = 'Group') +
geom_boxplot(aes(color = factor(Group)), outlier.shape = NA, show.legend = FALSE) +
ylim(0,0.08) +
stat_summary(fun.y=mean, geom="point", shape=23, size=3) +
theme_bw()
recall_S_LDT
ggsave("02_Plots/Tripple_S_Recall_Groups.png", recall_S_LDT, width = 8, height = 5.1)
#### precision ###
precision_S_LDT <- ggplot(treeDataDf, aes(x = as.factor(Group),
y = S_LDT_precision,
group = as.factor(Group))) +
labs(title = 'Triple S: Mean Precision of Groups',
x ='Group',
y = 'Precision',
colour = 'Group') +
geom_boxplot(aes(color = factor(Group)), outlier.shape = NA, show.legend = FALSE) +
ylim(0,0.005) +
stat_summary(fun.y=mean, geom="point", shape=23, size=3) +
theme_bw()
precision_S_LDT
ggsave("02_Plots/Tripple_S_Precision_Groups.png", precision_S_LDT, width = 8, height = 5.1)
#### accuracy ###
accuracy_S_LDT <- ggplot(treeDataDf, aes(x = as.factor(Group),
y = S_LDT_accuracy,
group = as.factor(Group))) +
labs(title = 'Triple S: Mean Accuracy of Groups',
x ='Group',
y = 'Accuracy',
colour = 'Group') +
geom_boxplot(aes(color = factor(Group)), outlier.shape = NA, show.legend = FALSE) +
ylim(-0.1,1) +
stat_summary(fun.y=mean, geom="point", shape=23, size=3) +
theme_bw()
accuracy_S_LDT
ggsave("02_Plots/Tripple_S_Accuracy_Groups.png", accuracy_S_LDT, width = 8, height = 5.1)
#### precision ###
precision_S_LDT <- ggplot(treeDataDf, aes(x = as.factor(Group),
y = S_LDT_precision,
group = as.factor(Group))) +
labs(title = 'Triple S: Mean Precision of Groups',
x ='Group',
y = 'Precision',
colour = 'Group') +
geom_boxplot(aes(color = factor(Group)), outlier.shape = NA, show.legend = FALSE) +
ylim(0,0.005) +
stat_summary(fun.y=mean, geom="point", shape=23, size=3) +
theme_bw()
precision_S_LDT
#### precision ###
precision_S_LDT <- ggplot(treeDataDf, aes(x = as.factor(Group),
y = S_LDT_precision,
group = as.factor(Group))) +
labs(title = 'Triple S: Mean Precision of Groups',
x ='Group',
y = 'Precision',
colour = 'Group') +
geom_boxplot(aes(color = factor(Group)), outlier.shape = NA, show.legend = FALSE) +
ylim(0,0.001) +
stat_summary(fun.y=mean, geom="point", shape=23, size=3) +
theme_bw()
precision_S_LDT
#### precision ###
precision_S_LDT <- ggplot(treeDataDf, aes(x = as.factor(Group),
y = S_LDT_precision,
group = as.factor(Group))) +
labs(title = 'Triple S: Mean Precision of Groups',
x ='Group',
y = 'Precision',
colour = 'Group') +
geom_boxplot(aes(color = factor(Group)), outlier.shape = NA, show.legend = FALSE) +
ylim(0,0.0001) +
stat_summary(fun.y=mean, geom="point", shape=23, size=3) +
theme_bw()
precision_S_LDT
#### precision ###
precision_S_LDT <- ggplot(treeDataDf, aes(x = as.factor(Group),
y = S_LDT_precision,
group = as.factor(Group))) +
labs(title = 'Triple S: Mean Precision of Groups',
x ='Group',
y = 'Precision',
colour = 'Group') +
geom_boxplot(aes(color = factor(Group)), outlier.shape = NA, show.legend = FALSE) +
ylim(0,0.01) +
stat_summary(fun.y=mean, geom="point", shape=23, size=3) +
theme_bw()
precision_S_LDT
#### Tripple S Plots ####
#### recall ####
recall_S_LDT <- ggplot(treeDataDf, aes(x = as.factor(Group),
y = S_LDT_recall,
group = as.factor(Group))) +
labs(title = 'Triple S: Mean Recall of Groups',
x ='Group',
y = 'Recall',
colour = 'Group') +
geom_boxplot(aes(color = factor(Group)), outlier.shape = NA, show.legend = FALSE) +
ylim(0,0.08) +
stat_summary(fun.y=mean, geom="point", shape=23, size=3) +
theme_bw()
recall_S_LDT
#### Tripple S Plots ####
#### recall ####
recall_S_LDT <- ggplot(treeDataDf, aes(x = as.factor(Group),
y = S_LDT_recall,
group = as.factor(Group))) +
labs(title = 'Triple S: Mean Recall of Groups',
x ='Group',
y = 'Recall',
colour = 'Group') +
geom_boxplot(aes(color = factor(Group)), outlier.shape = NA, show.legend = FALSE) +
#ylim(0,0.08) +
stat_summary(fun.y=mean, geom="point", shape=23, size=3) +
theme_bw()
recall_S_LDT
#### Tripple S Plots ####
#### recall ####
recall_S_LDT <- ggplot(treeDataDf, aes(x = as.factor(Group),
y = S_LDT_recall,
group = as.factor(Group))) +
labs(title = 'Triple S: Mean Recall of Groups',
x ='Group',
y = 'Recall',
colour = 'Group') +
geom_boxplot(aes(color = factor(Group)), outlier.shape = NA, show.legend = FALSE) +
ylim(0.9,1.1) +
stat_summary(fun.y=mean, geom="point", shape=23, size=3) +
theme_bw()
recall_S_LDT
#### Tripple S Plots ####
#### recall ####
recall_S_LDT <- ggplot(treeDataDf, aes(x = as.factor(Group),
y = S_LDT_recall,
group = as.factor(Group))) +
labs(title = 'Triple S: Mean Recall of Groups',
x ='Group',
y = 'Recall',
colour = 'Group') +
geom_boxplot(aes(color = factor(Group)), outlier.shape = NA, show.legend = FALSE) +
ylim(0.99,1.1) +
stat_summary(fun.y=mean, geom="point", shape=23, size=3) +
theme_bw()
recall_S_LDT
names(treeDataDf)
1/0
0/1
0/5
0/0
treeDataDf$T_Triple_Fraction <- treeDataDf$T_ldt_triple / treeDataDf$T_triple1
treeDataDf$T_Triple_Fraction
treeDataDf$T_ldt_triple
treeDataDf$T_triple1
treeDataDf$T_Triple_Fraction <- treeDataDf$T_ldt_triple / treeDataDf$T_triple
treeDataDf$T_Triple_Fraction
T_Triple_Fraction <- ggplot(treeDataDf, aes(x = as.factor(Group),
y = T_Triple_Fraction,
group = as.factor(Group))) +
labs(title = 'Triple S: Mean Accuracy of Groups',
x ='Group',
y = 'Accuracy',
colour = 'Group') +
geom_boxplot(aes(color = factor(Group)), outlier.shape = NA, show.legend = FALSE) +
ylim(-0.1,1) +
stat_summary(fun.y=mean, geom="point", shape=23, size=3) +
theme_bw()
T_Triple_Fraction
T_Triple_Fraction <- ggplot(treeDataDf, aes(x = as.factor(Group),
y = T_Triple_Fraction,
group = as.factor(Group))) +
labs(title = 'Triple S: Mean Accuracy of Groups',
x ='Group',
y = 'Accuracy',
colour = 'Group') +
geom_boxplot(aes(color = factor(Group)), outlier.shape = NA, show.legend = FALSE) +
#ylim(-0.1,1) +
stat_summary(fun.y=mean, geom="point", shape=23, size=3) +
theme_bw()
T_Triple_Fraction
T_Triple_Fraction <- ggplot(treeDataDf, aes(x = as.factor(Group),
y = T_Triple_Fraction,
group = as.factor(Group))) +
labs(title = 'Triple S: Mean Accuracy of Groups',
x ='Group',
y = 'Accuracy',
colour = 'Group') +
geom_boxplot(aes(color = factor(Group)), outlier.shape = NA, show.legend = FALSE) +
ylim(0,0.60) +
stat_summary(fun.y=mean, geom="point", shape=23, size=3) +
theme_bw()
T_Triple_Fraction
T_Triple_Fraction <- ggplot(treeDataDf, aes(x = as.factor(Group),
y = T_Triple_Fraction,
group = as.factor(Group))) +
labs(title = 'Triple S: Mean Accuracy of Groups',
x ='Group',
y = 'Accuracy',
colour = 'Group') +
geom_boxplot(aes(color = factor(Group)), outlier.shape = NA, show.legend = FALSE) +
ylim(0,0.60) +
stat_summary(fun=mean, geom="point", shape=23, size=3) +
theme_bw()
T_Triple_Fraction
T_Triple_Fraction <- ggplot(treeDataDf, aes(x = as.factor(Group),
y = T_Triple_Fraction,
group = as.factor(Group))) +
labs(title = 'Triple S: Fraction of Triples within the LDT Graph',
x ='Group',
y = 'Fraction of Triples in LGT-Graph',
colour = 'Group') +
geom_boxplot(aes(color = factor(Group)), outlier.shape = NA, show.legend = FALSE) +
ylim(0,0.60) +
stat_summary(fun=mean, geom="point", shape=23, size=3) +
theme_bw()
T_Triple_Fraction
T_Triple_Fraction <- ggplot(treeDataDf, aes(x = as.factor(Group),
y = T_Triple_Fraction,
group = as.factor(Group))) +
labs(title = 'Triple T: Fraction of Triples within the LDT Graph',
x ='Group',
y = 'Fraction of Triples in LDT-Graph',
colour = 'Group') +
geom_boxplot(aes(color = factor(Group)), outlier.shape = NA, show.legend = FALSE) +
ylim(0,0.60) +
stat_summary(fun=mean, geom="point", shape=23, size=3) +
theme_bw()
T_Triple_Fraction
treeDataDf$T_Triple_Fraction <- treeDataDf$T_ldt_triple / treeDataDf$T_triple
T_Triple_Fraction <- ggplot(treeDataDf, aes(x = as.factor(Group),
y = T_Triple_Fraction,
group = as.factor(Group))) +
labs(title = 'Triple T: Fraction of Triples within the LDT Graph',
x ='Group',
y = 'Fraction of Triples in LDT-Graph',
colour = 'Group') +
geom_boxplot(aes(color = factor(Group)), outlier.shape = NA, show.legend = FALSE) +
ylim(0,0.60) +
stat_summary(fun=mean, geom="point", shape=23, size=3) +
theme_bw()
T_Triple_Fraction
ggsave("02_Plots/Tripple_T_Fractions_of_T_Tripples_Groups.png", T_Triple_Fraction, width = 8, height = 5.1)
S_Triple_Fraction <- ggplot(treeDataDf, aes(x = as.factor(Group),
y = S_Triple_Fraction,
group = as.factor(Group))) +
labs(title = 'Triple S: Fraction of Triples within the LDT Graph',
x ='Group',
y = 'Fraction of Triples in LDT-Graph',
colour = 'Group') +
geom_boxplot(aes(color = factor(Group)), outlier.shape = NA, show.legend = FALSE) +
ylim(0,0.60) +
stat_summary(fun=mean, geom="point", shape=23, size=3) +
theme_bw()
S_Triple_Fraction
treeDataDf$S_Triple_Fraction <- treeDataDf$S_ldt_triple / treeDataDf$S_triple
S_Triple_Fraction <- ggplot(treeDataDf, aes(x = as.factor(Group),
y = S_Triple_Fraction,
group = as.factor(Group))) +
labs(title = 'Triple S: Fraction of Triples within the LDT Graph',
x ='Group',
y = 'Fraction of Triples in LDT-Graph',
colour = 'Group') +
geom_boxplot(aes(color = factor(Group)), outlier.shape = NA, show.legend = FALSE) +
ylim(0,0.60) +
stat_summary(fun=mean, geom="point", shape=23, size=3) +
theme_bw()
S_Triple_Fraction
S_Triple_Fraction <- ggplot(treeDataDf, aes(x = as.factor(Group),
y = S_Triple_Fraction,
group = as.factor(Group))) +
labs(title = 'Triple S: Fraction of Triples within the LDT Graph',
x ='Group',
y = 'Fraction of Triples in LDT-Graph',
colour = 'Group') +
geom_boxplot(aes(color = factor(Group)), outlier.shape = NA, show.legend = FALSE) +
ylim(0,0.70) +
stat_summary(fun=mean, geom="point", shape=23, size=3) +
theme_bw()
S_Triple_Fraction
T_Triple_Fraction
T_Triple_Fraction <- ggplot(treeDataDf, aes(x = as.factor(Group),
y = T_Triple_Fraction,
group = as.factor(Group))) +
labs(title = 'Triple T: Fraction of Triples within the LDT Graph',
x ='Group',
y = 'Fraction of Triples in LDT-Graph',
colour = 'Group') +
geom_boxplot(aes(color = factor(Group)), outlier.shape = NA, show.legend = FALSE) +
ylim(0,0.70) +
stat_summary(fun=mean, geom="point", shape=23, size=3) +
theme_bw()
T_Triple_Fraction
ggsave("02_Plots/Tripple_T_Fractions_of_T_Tripples_Groups.png", T_Triple_Fraction, width = 8, height = 5.1)
treeDataDf$S_Triple_Fraction <- treeDataDf$S_ldt_triple / treeDataDf$S_triple
S_Triple_Fraction <- ggplot(treeDataDf, aes(x = as.factor(Group),
y = S_Triple_Fraction,
group = as.factor(Group))) +
labs(title = 'Triple S: Fraction of Triples within the LDT Graph',
x ='Group',
y = 'Fraction of Triples in LDT-Graph',
colour = 'Group') +
geom_boxplot(aes(color = factor(Group)), outlier.shape = NA, show.legend = FALSE) +
ylim(0,0.70) +
stat_summary(fun=mean, geom="point", shape=23, size=3) +
theme_bw()
S_Triple_Fraction
ggsave("02_Plots/Tripple_S_Fractions_of_S_Tripples_Groups.png", S_Triple_Fraction, width = 8, height = 5.1)
test <- ggplot(treeDataDf, aes(x = as.factor(hgt_rate),
y = Fraction_of_Xenologs,
group=as.factor(dupl_rate))) +
#geom_jitter(shape=16,
#            position=position_jitter(0.15),
#            aes(color = factor(hgt_rate), group=factor(dupl_rate))) +
geom_boxplot(outlier.shape = NA,
show.legend = FALSE,
aes(alpha = 0.8, group=factor(dupl_rate))) +
labs(title = 'Fraction_of_Xenologs vs. Loss Rate',
x = 'Loss Rate',
y = 'Fraction of Xenelogs',
colour = 'HGT Rate') +
theme_bw()
test
box_hgt_loss
test
test <- ggplot(treeDataDf, aes(x = as.factor(hgt_rate),
y = Fraction_of_Xenologs,
group=as.factor(dupl_rate))) +
geom_jitter(shape=16,
position=position_jitter(0.15),
aes(color = factor(hgt_rate), group=factor(dupl_rate))) +
geom_boxplot(outlier.shape = NA,
show.legend = FALSE,
aes(alpha = 0.8, group=factor(dupl_rate))) +
labs(title = 'Fraction_of_Xenologs vs. HGT Rate',
x = 'HGT Rate',
y = 'Fraction of Xenelogs',
colour = 'Duplikation Rate') +
theme_bw()
test
test1 <- ggplot(treeDataDf, aes(x = as.factor(hgt_rate),
y = Fraction_of_Xenologs,
group=as.factor(loss_rate))) +
geom_jitter(shape=16,
position=position_jitter(0.15),
aes(color = factor(hgt_rate), group=factor(loss_rate))) +
geom_boxplot(outlier.shape = NA,
show.legend = FALSE,
aes(alpha = 0.8, group=factor(dupl_rate))) +
labs(title = 'Fraction_of_Xenologs vs. HGT Rate',
x = 'HGT Rate',
y = 'Fraction of Xenelogs',
colour = 'Loss Rate') +
theme_bw()
test1
plot(x = treeDataDf$Number_of_leaves_tgt,
y = treeDataDf$Fraction_of_Xenologs)
mod = lm(treeDataDf$Fraction_of_Xenologs ~
treeDataDf$Number_of_leaves_tgt)
abline(mod[[1]][1], mod[[1]][2], col = 'red', lwd = 2)
boxplot(Fraction_of_Xenologs~factor(hgt_rate), data = treeDataDf)
plot(x = treeDataDf$non_binary_prob,
y = treeDataDf$Fraction_of_Xenologs)
View(sumCDrecallDf)
write.csv(sumCDrecallDf, 'Summary_CD_Recall.csv' , dec = '.', sep = ';')
write.csv(sumCDrecallDf, 'Summary_CD_Precision.csv' , dec = '.', sep = ';')
write.csv(sumCDrecallDf, 'Summary_CD_Accuracy.csv' , dec = '.', sep = ';')
write.csv(sumRSrecallDf, 'Summary_Fitch_Recall.csv' , dec = '.', sep = ';')
write.csv(sumRSprecisionlDf, 'Summary_Fitch_Precision.csv' , dec = '.', sep = ';')
write.csv(sumRSaccuracyDf, 'Summary_Fitch_Accuracy.csv' , dec = '.', sep = ';')
write.csv(sumCDrecallDf, 'Summary_CD_Recall.csv' , dec = '.', sep = ';')
write.csv(sumCDprecisionlDf, 'Summary_CD_Precision.csv' , dec = '.', sep = ';')
write.csv(sumCDaccuracyDf, 'Summary_CD_Accuracy.csv' , dec = '.', sep = ';')
write.csv(sumRSrecallDf, 'Summary_Fitch_Recall.csv' , dec = '.', sep = ';')
write.csv(sumRSprecisionlDf, 'Summary_Fitch_Precision.csv' , dec = '.', sep = ';')
write.csv(sumRSaccuracyDf, 'Summary_Fitch_Accuracy.csv' , dec = '.', sep = ';')
View(sumCDaccuracyDf)
View(sumTripple)
gruppen <- levels(treeDataDf$Group)
sumTripple <- data.frame(Group = character(length(gruppen)))
for (i in 1:length(gruppen)) {
sumTripple$Group[i] <- gruppen[i]
sumTripple$T_LDT_Recall_Mean[i] <- round(mean(treeDataDf$T_LDT_recall[which(treeDataDf$Group == gruppen[i])], na.rm = T), digits = 4)
sumTripple$T_LDT_Recall_Median[i] <- round(median(treeDataDf$T_LDT_recall[which(treeDataDf$Group == gruppen[i])], na.rm = T), digits = 4)
sumTripple$S_LDT_Recall_Mean[i] <- round(mean(treeDataDf$S_LDT_recall[which(treeDataDf$Group == gruppen[i])], na.rm = T), digits = 4)
sumTripple$S_LDT_Recall_Median[i] <- round(median(treeDataDf$S_LDT_recall[which(treeDataDf$Group == gruppen[i])], na.rm = T), digits = 4)
}
View(sumTripple)
mean(treeDataDf$T_LDT_recall[which(treeDataDf$Group == gruppen[i])], na.rm = T)
treeDataDf$T_LDT_recall[which(treeDataDf$Group == gruppen[i])]
